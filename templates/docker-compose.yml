---

version: "3.3"

networks:
  internal-network:
    internal: true
  external-network:

volumes:
  postgres_data:
  static_volume:

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=juntagrico
      - POSTGRES_USER=juntagrico
      - POSTGRES_PASSWORD="{{ juntagrico_postgres_pass }}"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      internal-network:

  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - --api=true
      - --api.dashboard=true
      - --certificatesresolvers.le.acme.email=admin@rotebeete.org
      - --certificatesresolvers.le.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --ping=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /acme:/etc/traefik/acme
    labels:
      traefik.enable: true
      traefik.http.middlewares.api-redirectscheme.redirectscheme.scheme: https
      traefik.http.middlewares.api-redirectscheme.redirectscheme.permanent: true
      traefik.http.routers.api-http.entryPoints: http
      traefik.http.routers.api-http.middlewares: api-redirectscheme@docker
      traefik.http.routers.api-http.rule: ((Host(`{{ inventory_hostname }}`) && PathPrefix(`/api`)) || (Host(`{{ inventory_hostname }}`) && PathPrefix(`/dashboard`)))
      traefik.http.routers.api-http.service: api@internal
      traefik.http.routers.api-https.entrypoints: https
      traefik.http.routers.api-https.rule: ((Host(`{{ inventory_hostname }}`) && PathPrefix(`/api`)) || (Host(`{{ inventory_hostname }}`) && PathPrefix(`/dashboard`)))
      traefik.http.routers.api-https.service: api@internal
      traefik.http.routers.api-https.tls: true
      traefik.http.routers.api-https.tls.certresolver: le
    networks:
      external-network:
      internal-network:
    depends_on:
      - juntagrico
      - nginx

  nginx:
    image: nginx:1.19-alpine
    container_name: nginx
    environment:
      NGINX_CONFIG: |
        server {
          listen 8001;
          location / {
            alias /home/app/web/static/;
          }
        }
    command:
      - /bin/sh
      - -c
      - |
        echo "$$NGINX_CONFIG" > /etc/nginx/conf.d/default.conf
        sed -e "s/error_log.*/error_log\ \/dev\/null\ crit;/g" -e "s/access_log.*/access_log\ \/dev\/null;/g" -i /etc/nginx/nginx.conf
        nginx -g "daemon off;"
    volumes:
      - static_volume:/home/app/web/static
    labels:
      traefik.enable: true
      traefik.http.middlewares.web-compress.compress: true
      traefik.http.middlewares.web-redirectscheme.redirectscheme.scheme: https
      traefik.http.middlewares.web-redirectscheme.redirectscheme.permanent: true
      traefik.http.middlewares.web-stripprefix.stripprefix.prefixes: /static
      traefik.http.routers.web-http.entrypoints: http
      traefik.http.routers.web-http.middlewares: app-redirectscheme@docker
      traefik.http.routers.web-http.rule: (Host(`{{ inventory_hostname }}`) && PathPrefix(`/static`))
      traefik.http.routers.web-https.entrypoints: https
      traefik.http.routers.web-https.middlewares: web-compress@docker,web-stripprefix@docker
      traefik.http.routers.web-https.rule: (Host(`{{ inventory_hostname }}`) && PathPrefix(`/static`))
      traefik.http.routers.web-https.tls: true
      traefik.http.routers.web-https.tls.certresolver: le
      traefik.http.services.web-https.loadbalancer.server.port: 8001
    networks:
      internal-network:
    expose:
      - 8001
    depends_on:
      - juntagrico

  juntagrico:
    image: rotebeete/juntagrico
    container_name: juntagrico
    environment:
      DEBUG: 0
      JUNTAGRICO_DATABASE_BACKEND: django.db.backends.postgresql
      JUNTAGRICO_DATABASE_NAME: juntagrico
      JUNTAGRICO_DATABASE_USER: juntagrico
      JUNTAGRICO_DATABASE_PASS: "{{ juntagrico_postgres_pass }}"
      JUNTAGRICO_DATABASE_HOST: postgres
      JUNTAGRICO_EMAIL_HOST: "mail.rotebeete.org"
      JUNTAGRICO_EMAIL_USER: "no-reply@rotebeete.org"
      JUNTAGRICO_EMAIL_PASS: "{{ juntagrico_email_pass }}"
      JUNTAGRICO_FQDN: "{{ inventory_hostname }}"
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: "{{ juntagrico_admin_pass }}"
      DJANGO_SUPERUSER_EMAIL: admin@rotebeete.org
    labels:
      traefik.enable: true
      traefik.http.middlewares.app-redirectscheme.redirectscheme.scheme: https
      traefik.http.middlewares.app-redirectscheme.redirectscheme.permanent: true
      traefik.http.routers.app-http.entrypoints: http
      traefik.http.routers.app-http.middlewares: app-redirectscheme@docker
      traefik.http.routers.app-http.rule: (Host(`{{ inventory_hostname }}`) && PathPrefix(`/`))
      traefik.http.routers.app-https.entrypoints: https
      traefik.http.routers.app-https.rule: (Host(`{{ inventory_hostname }}`) && PathPrefix(`/`))
      traefik.http.routers.app-https.tls: true
      traefik.http.routers.app-https.tls.certresolver: le
      traefik.http.services.app-https.loadbalancer.server.port: 8000
    volumes:
      - static_volume:/home/app/web/static
    networks:
      internal-network:
    expose:
      - 8000
    depends_on:
      - postgres
